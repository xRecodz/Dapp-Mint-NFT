import { useState, useEffect } from "react";
import { ethers } from "ethers";
import abi from "../abi.json";

const contractAddress = import.meta.env.VITE_CONTRACT_ADDRESS;

export default function MintButton() {
  const [loading, setLoading] = useState(false);
  const [amount, setAmount] = useState(1);
  const [minted, setMinted] = useState(0);

  async function fetchMinted() {
    try {
      if (!window.ethereum) return;
      const provider = new ethers.BrowserProvider(window.ethereum);
      const signer = await provider.getSigner();
      const contract = new ethers.Contract(contractAddress, abi, signer);

      // cek balance NFT wallet ini
      const balance = await contract.balanceOf(signer.address);
      setMinted(Number(balance));
    } catch (err) {
      console.error("fetchMinted error:", err);
    }
  }

  async function handleMint() {
    try {
      if (!window.ethereum) return alert("❌ Metamask not found");

      const provider = new ethers.BrowserProvider(window.ethereum);
      const signer = await provider.getSigner();
      const contract = new ethers.Contract(contractAddress, abi, signer);

      // ambil harga per NFT
      const price = await contract.MINT_PRICE();
      const totalPrice = price * BigInt(amount);

      // cek balance dulu (agar total ≤ 5)
      const balance = await contract.balanceOf(signer.address);
      if (Number(balance) + amount > 5) {
        return alert("❌ Max 5 NFTs per wallet");
      }

      setLoading(true);
      const tx = await contract.mint(amount, { value: totalPrice });
      await tx.wait();

      alert(`✅ Successfully minted ${amount} NFT(s)!`);
      fetchMinted(); // update balance
    } catch (err) {
      console.error(err);
      alert("❌ Minting failed: " + err.message);
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    fetchMinted();
  }, []);

  return (
    <div className="flex flex-col items-center gap-3">
      <p className="text-gray-700">You own: {minted} NFT(s)</p>
      <input
        type="number"
        min="1"
        max="5"
        value={amount}
        onChange={(e) => setAmount(Number(e.target.value))}
        className="border px-2 py-1 rounded w-20 text-center"
      />
      <button
        onClick={handleMint}
        disabled={loading}
        className="px-4 py-2 bg-blue-600 text-white rounded disabled:bg-gray-400"
      >
        {loading ? "⏳ Minting..." : `Mint ${amount} NFT`}
      </button>
    </div>
  );
}
